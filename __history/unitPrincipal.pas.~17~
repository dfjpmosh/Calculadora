unit unitPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  TForm1 = class(TForm)
    txtResultado: TEdit;
    btn7: TButton;
    btn8: TButton;
    btn9: TButton;
    Button4: TButton;
    btn4: TButton;
    btn5: TButton;
    btn6: TButton;
    Button8: TButton;
    btn1: TButton;
    btn2: TButton;
    btn3: TButton;
    Button12: TButton;
    btn0: TButton;
    Button14: TButton;
    Button15: TButton;
    Button16: TButton;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    procedure btnClick(Sender: TObject);
    procedure txtResultadoKeyPress(Sender: TObject; var Key: Char);
    procedure FormCreate(Sender: TObject);
  private
    procedure punto(numero: string);
    procedure suma();
    procedure resta();
    procedure multiplicacion();
    procedure division();
    procedure igual();
    procedure clear();
    procedure allClear();
    procedure escribeNumero(numero: string);

    function esDigito(c: string): Boolean;

  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  resultado: double;
  bandOp, bandPunto: bool;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
begin
  resultado := 0;
  bandOP := false;
  bandPunto := false;
end;

procedure TForm1.btnClick(Sender: TObject);
var
  numero: string;
begin
  numero := (Sender as TButton).Caption;

  escribeNumero(numero);
end;

procedure TForm1.txtResultadoKeyPress(Sender: TObject; var Key: Char);
begin
  escribeNumero(Key);
  //Key := #0;
end;

procedure TForm1.punto(numero: string);
begin
  if not bandPunto then
  begin
    bandPunto := true;
    txtResultado.Text := txtResultado.Text + '.';
  end;
end;

procedure TForm1.suma();
var
  aux: string;
begin
  bandOp := true;
  if txtResultado.Text <> '' then
  begin
    aux := txtResultado.Text;
  end
  else
  begin
    aux := '0';
  end;

  resultado := resultado + StrToFloat(aux);
  txtResultado.Text := FloatToStr(resultado);
end;

procedure TForm1.resta();
begin
  showMessage('resta');
end;

procedure TForm1.multiplicacion();
begin
  showMessage('multiplicacion');
end;

procedure TForm1.division();
begin
  showMessage('division');
end;

procedure TForm1.igual();
begin
  showMessage('igual');
end;

procedure TForm1.clear();
var
  aux: string;
begin
  //showMessage('c');
  aux := txtResultado.Text;

  if aux.Substring(aux.Length - 1, 1) = '.' then
  begin
    //showMessage('Es Punto');
    bandPunto := false;
  end;

  txtResultado.Text := aux.Substring(0, aux.Length - 1);
end;

procedure TForm1.allClear();
begin
  //showMessage('ac');
  txtResultado.Text := '';
  resultado := 0;
  bandOp := false;
  bandPunto := false;
end;

procedure TForm1.escribeNumero(numero: string);
var
  aux: string;
  iValue, iCode, pos: Integer;
begin
  pos := txtResultado.SelStart;
  //showMessage(IntToStr(pos));
  aux := txtResultado.Text;

  case numero[1] of
    #8:
    begin
      clear();
    end;
    'C': clear();
    'A': allClear();
    '=': igual();
    '+': suma();
    '-': resta();
    'x': multiplicacion();
    '÷': division();
    '.': punto(numero);
    else
    begin
      val(numero, iValue, iCode);
      if iCode = 0 then
      begin
        if bandOp then
        begin
          bandOp := false;
          txtResultado.Text := '';
          aux := '';
        end;

        txtResultado.Text := aux + numero;
      end;
    end;
  end;

  txtResultado.SelStart := aux.Length + 1;
  txtResultado.SetFocus;
end;



function TForm1.esDigito(c: string): Boolean;
begin
  try
    StrToInt(c);
    Result := True;
  except
    Result := False;
  end;
end;




end.
